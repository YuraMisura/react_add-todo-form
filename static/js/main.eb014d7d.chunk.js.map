{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","services/getUserById.ts","components/TodoForm/TodoForm.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","cn","completed","title","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","TodoForm","onAdd","useState","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserError","setHasUserError","action","method","onSubmit","event","todoList","preventDefault","Math","max","type","placeholder","value","onChange","textValue","target","replace","trim","required","initialTodos","App","setTodos","newTodo","prevTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb014d7d.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../type/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${user.email}`}\n    >\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../type/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && (\n        <UserInfo user={todo.user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../type/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../type/User';\nimport usersFromServer from '../api/users';\n\nexport function getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n","import React, { useState } from 'react';\nimport { Todo } from '../../type/Todo';\nimport usersFromServer from '../../api/users';\nimport { getUserById } from '../../services/getUserById';\n\ntype Props = {\n  todos: Todo[],\n  onAdd: (newTodo: Todo) => void;\n};\n\nexport const TodoForm: React.FC<Props> = ({ todos, onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const textValue = event.target.value.replace(/[^a-zA-ZіІ0-9]/g, '');\n\n    setTitle(textValue.trim());\n    setHasTitleError(false);\n  };\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserError(false);\n  };\n\n  const getNewTodoId = (todoList: Todo[]) => {\n    const MaxId = Math.max(...todoList.map(todo => todo.id));\n\n    return MaxId + 1;\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    onAdd({\n      title,\n      userId,\n      id: getNewTodoId(todos),\n      completed: false,\n      user: getUserById(userId),\n    });\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label>\n          {'Title: '}\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n        </label>\n\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label>\n          {'User: '}\n          <select\n            value={userId}\n            data-cy=\"userSelect\"\n            onChange={handleUserChange}\n            required\n          >\n            <option value=\"0\">\n              Choose a user\n            </option>\n\n            {usersFromServer.map((user) => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n        </label>\n\n        {hasUserError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport todosFromServer from './api/todos';\nimport { Todo } from './type/Todo';\nimport { getUserById } from './services/getUserById';\nimport { TodoForm } from './components/TodoForm';\n\nconst initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n\n  const addTodo = (newTodo: Todo) => {\n    setTodos(prevTodos => [...prevTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm todos={todos} onAdd={addTodo} />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}